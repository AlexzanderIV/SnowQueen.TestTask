//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SnowQueen.TestTask.WPF.ProductsWebService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductsWebService.IProductsWebService")]
    public interface IProductsWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsWebService/AddProduct", ReplyAction="http://tempuri.org/IProductsWebService/AddProductResponse")]
        void AddProduct(SnowQueen.TestTask.DataAccess.Dtos.ProductDto productDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsWebService/AddProduct", ReplyAction="http://tempuri.org/IProductsWebService/AddProductResponse")]
        System.Threading.Tasks.Task AddProductAsync(SnowQueen.TestTask.DataAccess.Dtos.ProductDto productDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsWebService/AddSeveralProducts", ReplyAction="http://tempuri.org/IProductsWebService/AddSeveralProductsResponse")]
        void AddSeveralProducts(SnowQueen.TestTask.DataAccess.Dtos.ProductDto[] productDtos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsWebService/AddSeveralProducts", ReplyAction="http://tempuri.org/IProductsWebService/AddSeveralProductsResponse")]
        System.Threading.Tasks.Task AddSeveralProductsAsync(SnowQueen.TestTask.DataAccess.Dtos.ProductDto[] productDtos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsWebService/GetProducts", ReplyAction="http://tempuri.org/IProductsWebService/GetProductsResponse")]
        SnowQueen.TestTask.DataAccess.Dtos.ProductDto[] GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsWebService/GetProducts", ReplyAction="http://tempuri.org/IProductsWebService/GetProductsResponse")]
        System.Threading.Tasks.Task<SnowQueen.TestTask.DataAccess.Dtos.ProductDto[]> GetProductsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductsWebServiceChannel : SnowQueen.TestTask.WPF.ProductsWebService.IProductsWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductsWebServiceClient : System.ServiceModel.ClientBase<SnowQueen.TestTask.WPF.ProductsWebService.IProductsWebService>, SnowQueen.TestTask.WPF.ProductsWebService.IProductsWebService {
        
        public ProductsWebServiceClient() {
        }
        
        public ProductsWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductsWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductsWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductsWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddProduct(SnowQueen.TestTask.DataAccess.Dtos.ProductDto productDto) {
            base.Channel.AddProduct(productDto);
        }
        
        public System.Threading.Tasks.Task AddProductAsync(SnowQueen.TestTask.DataAccess.Dtos.ProductDto productDto) {
            return base.Channel.AddProductAsync(productDto);
        }
        
        public void AddSeveralProducts(SnowQueen.TestTask.DataAccess.Dtos.ProductDto[] productDtos) {
            base.Channel.AddSeveralProducts(productDtos);
        }
        
        public System.Threading.Tasks.Task AddSeveralProductsAsync(SnowQueen.TestTask.DataAccess.Dtos.ProductDto[] productDtos) {
            return base.Channel.AddSeveralProductsAsync(productDtos);
        }
        
        public SnowQueen.TestTask.DataAccess.Dtos.ProductDto[] GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<SnowQueen.TestTask.DataAccess.Dtos.ProductDto[]> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
    }
}
